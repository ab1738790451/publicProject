server.port=81
debug=true
logging.level.org.springframework.boot.autoconfigure=error
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.check-template-location=true
spring.thymeleaf.mode=HTML5
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:33060/test?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.c3p0.maxPoolSize=20
spring.datasource.c3p0.minPoolSize=10
spring.datasource.c3p0.initPoolsize=10


spring.shardingsphere.enabled=false
spring.shardingsphere.datasource.names=testone,testwo
spring.shardingsphere.datasource.testone.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.testone.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.testone.url=jdbc:mysql://localhost:3306/testone?useUnicode=true&useSSL=false&characterEncoding=utf8&allowMultiQueries=true
spring.shardingsphere.datasource.testone.username=root
spring.shardingsphere.datasource.testone.password=123456

spring.shardingsphere.datasource.testwo.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.testwo.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.testwo.url=jdbc:mysql://localhost:3306/testwo?useUnicode=true&useSSL=false&characterEncoding=utf8&allowMultiQueries=true
spring.shardingsphere.datasource.testwo.username=root
spring.shardingsphere.datasource.testwo.password=123456

#分库策略，根据id取模
spring.shardingsphere.sharding.master-slave-rules.testone.masterDataSourceName=testone
spring.shardingsphere.sharding.master-slave-rules.testone.slaveDataSourceNames[0]=testone
spring.shardingsphere.sharding.master-slave-rules.testwo.masterDataSourceName=testwo
spring.shardingsphere.sharding.master-slave-rules.testwo.slaveDataSourceNames[0]=testwo
spring.shardingsphere.sharding.default-data-source-name=testone
spring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.example.demo.sharedingConfig.MyDataSourceAlgorithm

spring.shardingsphere.sharding.tables.tb.actual-data-nodes=testone.tb_$->{0..1}
#spring.shardingsphere.sharding.tables.tb.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.tb.table-strategy.inline.algorithm-expression=tb_$->{id % 2}
spring.shardingsphere.sharding.tables.tb.table-strategy.hint.algorithm-class-name=com.example.demo.sharedingConfig.MyHintShardingAlgorithm
spring.shardingsphere.sharding.tables.tb.key-generator.column=id
spring.shardingsphere.sharding.tables.tb.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.tbt.actual-data-nodes=testwo.tbt_$->{0..1}
spring.shardingsphere.sharding.tables.tbt.table-strategy.hint.algorithm-class-name=com.example.demo.sharedingConfig.MyHintShardingAlgorithm

mybatis-plus.mapper-locations=classpath:/mapper/**/*Mapper.xml
mybatis-plus.type-aliases-package=com.example.demo.entity
mybatis-plus.configuration.map-underscore-to-camel-case=true

<<<<<<< HEAD

# REDIS（RedisProperties）
# （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
# spring.redis.cluster.max-redirects=
# （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
# spring.redis.cluster.nodes=
# 连接工厂使用的数据库索引。
#spring.redis.database=0
# 连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379
#spring.redis.url=
# Redis服务器主机。
spring.redis.host=43.140.209.247
# 登录redis服务器的密码。
spring.redis.password=woshen@redis-2022
# 启用SSL支持。
spring.redis.ssl=false
# 池在给定时间可以分配的最大连接数。使用负值无限制。
spring.redis.jedis.pool.max-active=8
# 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。
spring.redis.jedis.pool.max-idle=8
# 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。
spring.redis.jedis.pool.max-wait=-1
# 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。
spring.redis.jedis.pool.min-idle=0
# Redis服务器端口。
spring.redis.port=6379
# （哨兵模式，不使用则不用开启）Redis服务器的名称。
# spring.redis.sentinel.master=
# （哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。
# spring.redis.sentinel.nodes=
# 以毫秒为单位的连接超时。
spring.redis.timeout=0
=======
spring.redis.host=43.140.209.247
spring.redis.port=6379
spring.redis.password=woshen@redis-2022
spring.redis.timeout=30000
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-active=64
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.max-wait=30000


>>>>>>> 03b5ea3049087cf6bce18b751c066be984028e21
